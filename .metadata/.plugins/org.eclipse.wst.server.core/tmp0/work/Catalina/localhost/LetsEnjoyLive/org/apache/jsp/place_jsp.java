/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2023-10-06 09:22:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bean.*;

public final class place_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("bean");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      bean.PlaceDTO pdtoA = null;
      pdtoA = (bean.PlaceDTO) _jspx_page_context.getAttribute("pdtoA", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (pdtoA == null){
        pdtoA = new bean.PlaceDTO();
        _jspx_page_context.setAttribute("pdtoA", pdtoA, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\n');
      bean.PlaceDTO pdtoN = null;
      pdtoN = (bean.PlaceDTO) _jspx_page_context.getAttribute("pdtoN", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (pdtoN == null){
        pdtoN = new bean.PlaceDTO();
        _jspx_page_context.setAttribute("pdtoN", pdtoN, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("	<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\" />\n");
      out.write("    <title>邦ロックまとめサイト!!!_会場</title>\n");
      out.write("    \n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("    <div class = \"header\">\n");
      out.write("        <nav>\n");
      out.write("            <h2 class=\"logo\">邦ロックまとめサイト!!!</h2>\n");
      out.write("            <ul>\n");
      out.write("                <li><a href=\"index.html\">HOME</a></li>\n");
      out.write("                <li><a href=\"band.jsp\">バンド</a></li>\n");
      out.write("                <li><a href=\"live.jsp\">ライブ</a></li>\n");
      out.write("                <li><a href=\"place.jsp\">会場</a></li>\n");
      out.write("                <li><a href=\"review.jsp\">みんなの声</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </nav>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    <div class = \"main\">\n");
      out.write("    	<div class = \"search\">\n");
      out.write("    	<form action=\"/LetsEnjoyLive/showplace\" method=\"post\">\n");
      out.write("        	<h3>都道府県：</h3>\n");
      out.write("        	<select name=\"Area\">\n");
      out.write("        		<option value=\"\" selected=\"selected\">選択してください</option>\n");
      out.write("        		<optgroup label=\"北海道・東北地方\">\n");
      out.write("        			<option value=\"北海道\">北海道</option>\n");
      out.write("        			<option value=\"青森\">青森</option>\n");
      out.write("        			<option value=\"岩手\">岩手</option>\n");
      out.write("        			<option value=\"宮城\">宮城</option>\n");
      out.write("        			<option value=\"秋田\">秋田</option>\n");
      out.write("        			<option value=\"山形\">山形</option>\n");
      out.write("        			<option value=\"福島\">福島</option>\n");
      out.write("        		</optgroup>\n");
      out.write("        		<optgroup label=\"関東地方\">\n");
      out.write("        			<option value=\"茨城\">茨城</option>\n");
      out.write("        			<option value=\"栃木\">栃木</option>\n");
      out.write("        			<option value=\"群馬\">群馬</option>\n");
      out.write("        			<option value=\"埼玉\">埼玉</option>\n");
      out.write("        			<option value=\"千葉\">千葉</option>\n");
      out.write("        			<option value=\"東京\">東京</option>\n");
      out.write("        			<option value=\"神奈川\">神奈川</option>\n");
      out.write("        		</optgroup>\n");
      out.write("        		<optgroup label=\"中部地方\">\n");
      out.write("        			<option value=\"新潟\">新潟</option>\n");
      out.write("        			<option value=\"富山\">富山</option>\n");
      out.write("        			<option value=\"石川\">石川</option>\n");
      out.write("        			<option value=\"福井\">福井</option>\n");
      out.write("        			<option value=\"山梨\">山梨</option>\n");
      out.write("        			<option value=\"長野\">長野</option>\n");
      out.write("        			<option value=\"岐阜\">岐阜</option>\n");
      out.write("        			<option value=\"静岡\">静岡</option>\n");
      out.write("        			<option value=\"愛知\">愛知</option>\n");
      out.write("        		</optgroup>\n");
      out.write("        		<optgroup label=\"関西地方\">\n");
      out.write("        			<option value=\"滋賀\">滋賀</option>\n");
      out.write("        			<option value=\"京都\">京都</option>\n");
      out.write("        			<option value=\"大阪\">大阪</option>\n");
      out.write("        			<option value=\"兵庫\">兵庫</option>\n");
      out.write("        			<option value=\"奈良\">奈良</option>\n");
      out.write("        			<option value=\"和歌山\">和歌山</option>\n");
      out.write("        		</optgroup>\n");
      out.write("        		<optgroup label=\"中国地方\">\n");
      out.write("        			<option value=\"鳥取\">鳥取</option>\n");
      out.write("        			<option value=\"島根\">島根</option>\n");
      out.write("        			<option value=\"岡山\">岡山</option>\n");
      out.write("        			<option value=\"広島\">広島</option>\n");
      out.write("        			<option value=\"山口\">山口</option>\n");
      out.write("        		</optgroup>\n");
      out.write("        		<optgroup label=\"四国地方\">\n");
      out.write("        			<option value=\"徳島\">徳島</option>\n");
      out.write("        			<option value=\"香川\">香川</option>\n");
      out.write("        			<option value=\"愛媛\">愛媛</option>\n");
      out.write("        			<option value=\"高知\">高知</option>\n");
      out.write("        		</optgroup>\n");
      out.write("        		<optgroup label=\"九州地方\">\n");
      out.write("        			<option value=\"福岡\">福岡</option>\n");
      out.write("        			<option value=\"佐賀\">佐賀</option>\n");
      out.write("        			<option value=\"長崎\">長崎</option>\n");
      out.write("        			<option value=\"熊本\">熊本</option>\n");
      out.write("        			<option value=\"大分\">大分</option>\n");
      out.write("        			<option value=\"宮崎\">宮崎</option>\n");
      out.write("        			<option value=\"鹿児島\">鹿児島</option>\n");
      out.write("        			<option value=\"沖縄\">沖縄</option>\n");
      out.write("        		</optgroup>\n");
      out.write("        	</select>\n");
      out.write("        	<input type=\"submit\" value=\"検索\" /><br />\n");
      out.write("        </form>\n");
      out.write("        \n");
      out.write("        <form action=\"/LetsEnjoyLive/showplace\" method=\"post\">\n");
      out.write("        	<h3>会場名　：</h3>\n");
      out.write("        	<input type=\"submit\" value=\"下記から選択してここをクリック\" /><br />\n");
      out.write("        ");
 for(int i=0; i<pdtoA.size(); i++) {
			PlaceBean pb = pdtoA.get(i); 
      out.write("\n");
      out.write("			<input type=\"radio\" name=\"Name\" value=\"");
      out.print( pb.getName() );
      out.write('"');
      out.write('>');
      out.write('　');
      out.print( pb.getName() );
      out.write("<br />\n");
      out.write("		");
 } 
      out.write("\n");
      out.write("		</form>\n");
      out.write("		\n");
      out.write("		");

			if (pdtoN != null && pdtoN.size() > 0) {
				PlaceBean pb = pdtoN.get(0);
		
      out.write("\n");
      out.write("		</div>\n");
      out.write("			<h1 id = \"Name\">");
      out.print( pb.getName() );
      out.write("</h1>\n");
      out.write("		<div class = \"other\">\n");
      out.write("			<h3>地域　　:　");
      out.print( pb.getArea() );
      out.write("</h3>\n");
      out.write("			<h3>収容人数:　");
      out.print( pb.getCapa() );
      out.write("人</h3>\n");
      out.write("			<h3>最寄り駅:　");
      out.print( pb.getStat() );
      out.write("</h3>\n");
      out.write("		</div>\n");
      out.write("		");

			}
		
      out.write("\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
